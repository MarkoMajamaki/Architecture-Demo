version: '3.7'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest     

  sqlserver:
    image: mcr.microsoft.com/mssql/server:latest
    container_name: sqlserver
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "mssQlp4ssword#"
    ports:
      - "1433:1433"

  frontend:
    image: architecture_demo/frontend:v1
    container_name: frontend
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    ports:
      - "8001:80"

  orderapi:
    image: architecture_demo/order-api:v1
    container_name: orderapi
    restart: on-failure   
    build:
      # target: debug
      context: ../../backend/OrderApi
      dockerfile: Dockerfile
    depends_on: 
      - sqlserver
      - rabbitmq
    environment: 
      DatabaseName: "order-db"
    env_file: 
      - ./rabbitmq.env
      - ./sqlserver.env
    ports:
      - "8002:80"

  customerapi:
    image: architecture_demo/customer-api:v1
    container_name: customerapi
    restart: on-failure
    build:
      context: ../../backend/CustomerApi
      dockerfile: Dockerfile
      # target: debug
    depends_on: 
      - sqlserver
      - rabbitmq
    environment: 
      DatabaseName: "customer-db"
    env_file: 
      - ./rabbitmq.env
      - ./sqlserver.env
    ports:
      - "8003:80"

  nginx: 
    image: nginx:latest
    container_name: nginx_gateway
    ports:
      - "8080:8080"
    depends_on: 
      - customerapi
      - orderapi
      - frontend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf